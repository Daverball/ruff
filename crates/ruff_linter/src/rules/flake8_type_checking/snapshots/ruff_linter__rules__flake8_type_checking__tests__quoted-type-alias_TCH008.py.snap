---
source: crates/ruff_linter/src/rules/flake8_type_checking/mod.rs
---
TCH008.py:15:16: TCH008 [*] Remove quotes from type alias
   |
13 |     Bar = Foo
14 | 
15 | a: TypeAlias = 'int'  # TCH008
   |                ^^^^^ TCH008
16 | b: TypeAlias = 'Dict'  # OK
17 | c: TypeAlias = 'Foo'   # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
12 12 | else:
13 13 |     Bar = Foo
14 14 | 
15    |-a: TypeAlias = 'int'  # TCH008
   15 |+a: TypeAlias = int  # TCH008
16 16 | b: TypeAlias = 'Dict'  # OK
17 17 | c: TypeAlias = 'Foo'   # TCH008
18 18 | d: TypeAlias = 'Foo[str]'  # OK

TCH008.py:17:16: TCH008 [*] Remove quotes from type alias
   |
15 | a: TypeAlias = 'int'  # TCH008
16 | b: TypeAlias = 'Dict'  # OK
17 | c: TypeAlias = 'Foo'   # TCH008
   |                ^^^^^ TCH008
18 | d: TypeAlias = 'Foo[str]'  # OK
19 | e: TypeAlias = 'Foo.bar'  # OK
   |
   = help: Remove quotes

ℹ Safe fix
14 14 | 
15 15 | a: TypeAlias = 'int'  # TCH008
16 16 | b: TypeAlias = 'Dict'  # OK
17    |-c: TypeAlias = 'Foo'   # TCH008
   17 |+c: TypeAlias = Foo   # TCH008
18 18 | d: TypeAlias = 'Foo[str]'  # OK
19 19 | e: TypeAlias = 'Foo.bar'  # OK
20 20 | f: TypeAlias = 'Foo | None'  # TCH008

TCH008.py:20:16: TCH008 [*] Remove quotes from type alias
   |
18 | d: TypeAlias = 'Foo[str]'  # OK
19 | e: TypeAlias = 'Foo.bar'  # OK
20 | f: TypeAlias = 'Foo | None'  # TCH008
   |                ^^^^^^^^^^^^ TCH008
21 | g: TypeAlias = 'OptStr'   # OK
22 | h: TypeAlias = 'Bar'   # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
17 17 | c: TypeAlias = 'Foo'   # TCH008
18 18 | d: TypeAlias = 'Foo[str]'  # OK
19 19 | e: TypeAlias = 'Foo.bar'  # OK
20    |-f: TypeAlias = 'Foo | None'  # TCH008
   20 |+f: TypeAlias = Foo | None  # TCH008
21 21 | g: TypeAlias = 'OptStr'   # OK
22 22 | h: TypeAlias = 'Bar'   # TCH008
23 23 | i: TypeAlias = Foo['str']   # TCH008

TCH008.py:22:16: TCH008 [*] Remove quotes from type alias
   |
20 | f: TypeAlias = 'Foo | None'  # TCH008
21 | g: TypeAlias = 'OptStr'   # OK
22 | h: TypeAlias = 'Bar'   # TCH008
   |                ^^^^^ TCH008
23 | i: TypeAlias = Foo['str']   # TCH008
24 | j: TypeAlias = 'Baz'   # OK
   |
   = help: Remove quotes

ℹ Safe fix
19 19 | e: TypeAlias = 'Foo.bar'  # OK
20 20 | f: TypeAlias = 'Foo | None'  # TCH008
21 21 | g: TypeAlias = 'OptStr'   # OK
22    |-h: TypeAlias = 'Bar'   # TCH008
   22 |+h: TypeAlias = Bar   # TCH008
23 23 | i: TypeAlias = Foo['str']   # TCH008
24 24 | j: TypeAlias = 'Baz'   # OK
25 25 | 

TCH008.py:23:20: TCH008 [*] Remove quotes from type alias
   |
21 | g: TypeAlias = 'OptStr'   # OK
22 | h: TypeAlias = 'Bar'   # TCH008
23 | i: TypeAlias = Foo['str']   # TCH008
   |                    ^^^^^ TCH008
24 | j: TypeAlias = 'Baz'   # OK
   |
   = help: Remove quotes

ℹ Safe fix
20 20 | f: TypeAlias = 'Foo | None'  # TCH008
21 21 | g: TypeAlias = 'OptStr'   # OK
22 22 | h: TypeAlias = 'Bar'   # TCH008
23    |-i: TypeAlias = Foo['str']   # TCH008
   23 |+i: TypeAlias = Foo[str]   # TCH008
24 24 | j: TypeAlias = 'Baz'   # OK
25 25 | 
26 26 | type B = 'Dict'  # TCH008

TCH008.py:26:10: TCH008 [*] Remove quotes from type alias
   |
24 | j: TypeAlias = 'Baz'   # OK
25 | 
26 | type B = 'Dict'  # TCH008
   |          ^^^^^^ TCH008
27 | type D = 'Foo[str]'  # TCH008
28 | type E = 'Foo.bar'  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
23 23 | i: TypeAlias = Foo['str']   # TCH008
24 24 | j: TypeAlias = 'Baz'   # OK
25 25 | 
26    |-type B = 'Dict'  # TCH008
   26 |+type B = Dict  # TCH008
27 27 | type D = 'Foo[str]'  # TCH008
28 28 | type E = 'Foo.bar'  # TCH008
29 29 | type G = 'OptStr'  # TCH008

TCH008.py:27:10: TCH008 [*] Remove quotes from type alias
   |
26 | type B = 'Dict'  # TCH008
27 | type D = 'Foo[str]'  # TCH008
   |          ^^^^^^^^^^ TCH008
28 | type E = 'Foo.bar'  # TCH008
29 | type G = 'OptStr'  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
24 24 | j: TypeAlias = 'Baz'   # OK
25 25 | 
26 26 | type B = 'Dict'  # TCH008
27    |-type D = 'Foo[str]'  # TCH008
   27 |+type D = Foo[str]  # TCH008
28 28 | type E = 'Foo.bar'  # TCH008
29 29 | type G = 'OptStr'  # TCH008
30 30 | type I = Foo['str']  # TCH008

TCH008.py:28:10: TCH008 [*] Remove quotes from type alias
   |
26 | type B = 'Dict'  # TCH008
27 | type D = 'Foo[str]'  # TCH008
28 | type E = 'Foo.bar'  # TCH008
   |          ^^^^^^^^^ TCH008
29 | type G = 'OptStr'  # TCH008
30 | type I = Foo['str']  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
25 25 | 
26 26 | type B = 'Dict'  # TCH008
27 27 | type D = 'Foo[str]'  # TCH008
28    |-type E = 'Foo.bar'  # TCH008
   28 |+type E = Foo.bar  # TCH008
29 29 | type G = 'OptStr'  # TCH008
30 30 | type I = Foo['str']  # TCH008
31 31 | type J = 'Baz'  # TCH008

TCH008.py:29:10: TCH008 [*] Remove quotes from type alias
   |
27 | type D = 'Foo[str]'  # TCH008
28 | type E = 'Foo.bar'  # TCH008
29 | type G = 'OptStr'  # TCH008
   |          ^^^^^^^^ TCH008
30 | type I = Foo['str']  # TCH008
31 | type J = 'Baz'  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
26 26 | type B = 'Dict'  # TCH008
27 27 | type D = 'Foo[str]'  # TCH008
28 28 | type E = 'Foo.bar'  # TCH008
29    |-type G = 'OptStr'  # TCH008
   29 |+type G = OptStr  # TCH008
30 30 | type I = Foo['str']  # TCH008
31 31 | type J = 'Baz'  # TCH008
32 32 | 

TCH008.py:30:14: TCH008 [*] Remove quotes from type alias
   |
28 | type E = 'Foo.bar'  # TCH008
29 | type G = 'OptStr'  # TCH008
30 | type I = Foo['str']  # TCH008
   |              ^^^^^ TCH008
31 | type J = 'Baz'  # TCH008
   |
   = help: Remove quotes

ℹ Safe fix
27 27 | type D = 'Foo[str]'  # TCH008
28 28 | type E = 'Foo.bar'  # TCH008
29 29 | type G = 'OptStr'  # TCH008
30    |-type I = Foo['str']  # TCH008
   30 |+type I = Foo[str]  # TCH008
31 31 | type J = 'Baz'  # TCH008
32 32 | 
33 33 | 

TCH008.py:31:10: TCH008 [*] Remove quotes from type alias
   |
29 | type G = 'OptStr'  # TCH008
30 | type I = Foo['str']  # TCH008
31 | type J = 'Baz'  # TCH008
   |          ^^^^^ TCH008
   |
   = help: Remove quotes

ℹ Safe fix
28 28 | type E = 'Foo.bar'  # TCH008
29 29 | type G = 'OptStr'  # TCH008
30 30 | type I = Foo['str']  # TCH008
31    |-type J = 'Baz'  # TCH008
   31 |+type J = Baz  # TCH008
32 32 | 
33 33 | 
34 34 | class Baz:
